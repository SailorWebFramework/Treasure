{
    "a": {
        "description": "Together with its href attribute, creates a hyperlink to web pages, files, email addresses, locations within the current page, or anything else a URL can address.",
        "inits": [
            {"type": "text"},
            {"type": "body"},
            {
                "type": "required",
                "args": {
                    "href": "String"
                }
            },
            {
                "type": "required-with-body",
                "args": {
                    "href": "String"
                }
            }
        ],
        "attributes": {
            "href": {
                "description": "The URL of the link.",
                "type": "String"
            },
            "download": {
                "description": "Specifies that the target will be downloaded when a user clicks on the hyperlink.",
                "type": "String"
            },
            "hreflang": {
                "description": "Specifies the language of the linked document.",
                "type": "Unit.Language"
            },
            "media": {
                "description": "Specifies what media/device the linked document is optimized for.",
                "type": "String"
            },
            "ping": {
                "description": "Specifies a space-separated list of URLs to which, when the link is followed, post requests with the body ping will be sent by the browser (in the background). Typically used for tracking.",
                "type": "sequence[String]"
            },
            "referrerpolicy": {
                "description": "Specifies which referrer information to send when fetching the linked resource.",
                "type": "Unit.ReferrerPolicy"
            },
            "rel": {
                "description": "Specifies the relationship between the current document and the linked document.",
                "type": "String"
            },
            "target": {
                "description": "Specifies where to open the linked document.",
                "type": "Unit.Target"
            }
        }
    },
    "div": {
        "description": "The div element has no special meaning at all. It represents its children. It can be used with the class, lang, and title attributes to mark up semantics common to a group of consecutive elements.",
        "inits": [
            {"type": "text"}, 
            {"type": "body"},
            {"type": "empty"}
        ]
    },
    "h1": {
        "inits": [{"type": "text"}],
        "description": "The h1 element represents a level 1 heading."
    },
    "h2": {
        "inits": [{"type": "text"}],
        "description": "The h2 element represents a level 2 heading."
    },
    "h3": {
        "inits": [{"type": "text"}],
        "description": "The h3 element represents a level 3 heading."
    },
    "h4": {
        "inits": [{"type": "text"}],
        "description": "The h4 element represents a level 4 heading."
    },
    "h5": {
        "inits": [{"type": "text"}],
        "description": "The h5 element represents a level 5 heading."
    },
    "h6": {
        "inits": [{"type": "text"}],
        "description": "The h6 element represents a level 6 heading."
    },
    "img": {
        "description": "The img element represents an image.",
        "inits": [
            {
                "type": "required",
                "args": {
                    "src": "String",
                    "alt": "String"
                }
            }
        ],
        "attributes": {
            "alt": {
                "description": "The alternative text for the image.",
                "type": "String"
            },
            "crossorigin": {
                "description": "How the element handles cross-origin requests.",
                "type": "Unit.CrossOrigin"
            },
            "height": {
                "description": "The intrinsic height of the image in pixels.",
                "type": "int"
            },
            "ismap": {
                "description": "Indicates that the image is part of a server-side image map.",
                "type": "bool"
            },
            "loading": {
                "description": "Indicates how the browser should load the image.",
                "type": "Unit.Loading"
            },
            "referrerpolicy": {
                "description": "Specifies which referrer information to send when fetching the image.",
                "type": "Unit.ReferrerPolicy"
            },
            "sizes": {
                "description": "The sizes attribute gives the sizes of the icons for visual media.",
                "type": "String"
            },
            "src": {
                "description": "The URL of the image.",
                "type": "String"
            },
            "srcset": {
                "description": "A list of one or more strings separated by commas indicating a set of possible images to use for the source.",
                "type": "String"
            },
            "usemap": {
                "description": "The URL of the image map to use.",
                "type": "String"
            },
            "width": {
                "description": "The intrinsic width of the image in pixels.",
                "type": "int"
            }
        }
    },
    "button": {
        "description": "The button element represents a clickable button.",
        "inits": [
            {"type": "empty"},
            {"type": "text"},
            {"type": "body"}
        ],
        "attributes": {
            "autofocus": {
                "description": "Specifies that the button should automatically get focus when the page loads.",
                "type": "bool"
            },
            "disabled": {
                "description": "Specifies that the button should be disabled.",
                "type": "bool"
            },
            "form": {
                "description": "Specifies one or more forms the button belongs to.",
                "type": "String"
            },
            "formaction": {
                "description": "Specifies the URL of the file that will process the input control when the form is submitted.",
                "type": "String"
            },
            "formenctype": {
                "description": "Specifies how the form data should be encoded when submitting it to the server.",
                "type": "Unit.FormEncType"
            },
            "formmethod": {
                "description": "Specifies the HTTP method to use when sending form data.",
                "type": "Unit.FormMethod"
            },
            "formnovalidate": {
                "description": "Specifies that the form-data should not be validated on submission.",
                "type": "bool"
            },
            "formtarget": {
                "description": "Specifies where to display the response after submitting the form.",
                "type": "Unit.Target"
            },
            "name": {
                "description": "Specifies the name of the button.",
                "type": "String"
            },
            "type": {
                "description": "Specifies the type of button.",
                "type": "Unit.ButtonType"
            },
            "value": {
                "description": "Specifies the initial value of the button.",
                "type": "String"
            }
        }
    },
    "p": {
        "description": "The p element represents a paragraph.",
        "inits": [
            {"type": "text"},
            {"type": "body"}
        ]
    },
    "span": {
        "description": "The span element doesn't mean anything on its own, but can be useful when used together with the global attributes, e.g. class, lang, or dir. It represents its children.",
        "inits": [
            {"type": "text"},
            {"type": "body"}
        ]
    },
    "i": {
        "description": "The i element represents a span of text in an alternate voice or mood, or otherwise offset from the normal prose in a manner indicating a different quality of text, such as a taxonomic designation, a technical term, an idiomatic phrase from another language, a thought, or a ship name in Western texts.",
        "inits": [
            {"type": "text"},
            {"type": "body"}
        ]
    },
    "b": {
        "description": "The b element represents a span of text to which attention is being drawn for utilitarian purposes without conveying any extra importance and with no implication of an alternate voice or mood, such as key words in a document abstract, product names in a review, actionable words in interactive text-driven software, or an article lede.",
        "inits": [
            {"type": "text"},
            {"type": "body"}
        ]
    },
    "u": {
        "description": "The u element represents a span of text with an unarticulated, though explicitly rendered, non-textual annotation, such as labeling the text as being a proper name in Chinese text (a Chinese proper name mark), or labeling the text as being misspelt.",
        "inits": [
            {"type": "text"},
            {"type": "body"}
        ]
    },
    "ul": {
        "description": "The ul element represents an unordered list of items, typically rendered as a bulleted list.",
        "inits": [
            {"type": "text"},
            {"type": "body"}
        ]
    },
    "ol": {
        "description": "The ol element represents an ordered list of items, typically rendered as a numbered list.",
        "inits": [
            {"type": "text"},
            {"type": "body"}
        ]
    },
    "mark": {
        "description": "The mark element represents a run of text in one document marked or highlighted for reference purposes, due to its relevance in another context.",
        "inits": [
            {"type": "text"},
            {"type": "body"}
        ]
    },
    "input": {
        "description": "The input element represents a typed data field, usually with a form control to allow the user to edit the data.",
        "inits": [
            {
                "type": "required",
                "args": {
                    "type": "Unit.InputType",
                    "_value": {
                        "type": "binding[String]",
                        "event": "input"
                    }
                }
            },
            {
                "type": "required",
                "args": {
                    "_value": {
                        "type": "binding[String]",
                        "event": "input"
                    }
                }
            }
        ],
        "attributes": {
            "accept": {
                "description": "Specifies the types of files that the server accepts (only for type=\"file\").",
                "type": "String"
            },
            "alt": {
                "description": "The alternative text for the image specified by src when the input type is image.",
                "type": "String"
            },
            "autocomplete": {
                "description": "Specifies whether the input element should have autocomplete enabled.",
                "type": "Unit.Toggle"
            },
            "autofocus": {
                "description": "Specifies that the input element should automatically get focus when the page loads.",
                "type": "bool"
            },
            "checked": {
                "description": "Specifies that an input element should be pre-selected when the page loads (for type=\"radio\" or type=\"checkbox\").",
                "type": "bool"
            },
            "dirname": {
                "description": "Specifies that the input element should be directionally isolated from its surrounding content.",
                "type": "String"
            },
            "disabled": {
                "description": "Specifies that the input element should be disabled.",
                "type": "bool"
            },
            "form": {
                "description": "Specifies one or more forms the input element belongs to.",
                "type": "String"
            },
            "formaction": {
                "description": "Specifies the URL of the file that will process the input control when the form is submitted.",
                "type": "String"
            },
            "formenctype": {
                "description": "Specifies how the form data should be encoded when submitting it to the server.",
                "type": "Unit.FormEncType"
            },
            "formmethod": {
                "description": "Specifies the HTTP method to use when sending form data.",
                "type": "Unit.FormMethod"
            },
            "formnovalidate": {
                "description": "Specifies that the form-data should not be validated on submission.",
                "type": "bool"
            },
            "formtarget": {
                "description": "Specifies where to display the response after submitting the form.",
                "type": "Unit.Target"
            },
            "height": {
                "description": "The height of the image input (only for type=\"image\").",
                "type": "int"
            },
            "list": {
                "description": "Specifies a datalist for the input element.",
                "type": "String"
            },
            "max": {
                "description": "Specifies the maximum value for the input element.",
                "type": "Unit.InputQuantity"
            },
            "maxlength": {
                "description": "Specifies the maximum number of characters allowed in the input element.",
                "type": "int"
            },
            "min": {
                "description": "Specifies the minimum value for the input element.",
                "type": "Unit.InputQuantity"
            },
            "minlength": {
                "description": "Specifies the minimum number of characters allowed in the input element.",
                "type": "int"
            },
            "multiple": {
                "description": "Specifies that the user is allowed to enter more than one value in the input element.",
                "type": "bool"
            },
            "name": {
                "description": "Specifies the name of the input element.",
                "type": "String"
            },
            "pattern": {
                "description": "Specifies a regular expression that the input element's value is checked against.",
                "type": "String"
            },
            "placeholder": {
                "description": "Specifies a short hint that describes the expected value of the input element.",
                "type": "String"
            },
            "popovertarget": {
                "description": "Specifies the target of the popover.",
                "type": "String"
            },
            "popovertargetaction": {
                "description": "Specifies the action of the popover target.",
                "type": "Unit.PopoverTargetAction"
            },
            "readonly": {
                "description": "Specifies that the input element is read only.",
                "type": "bool"
            },
            "required": {
                "description": "Specifies that the input element must be filled out before submitting the form.",
                "type": "bool"
            },
            "size": {
                "description": "Specifies the width of the input element, in characters.",
                "type": "int"
            },
            "src": {
                "description": "Specifies the URL of the image to use as a submit button (only for type=\"image\").",
                "type": "String"
            },
            "step": {
                "description": "Specifies the legal number intervals for the input element.",
                "type": "String"
            },
            "type": {
                "description": "Specifies the type of input element to display.",
                "type": "Unit.InputType"
            },
            "value": {
                "description": "Specifies the initial value of the input element.",
                "type": "String"
            },
            "width": {
                "description": "The width of the image input (only for type=\"image\").",
                "type": "int"
            }
        }
    },
    "nav": {
        "description": "The nav element represents a section of a page that links to other pages or to parts within the page: a section with navigation links.",
        "inits": [
            {"type": "body"}
        ]

    },
    "title": {
        "description": "The title element represents the document's title or name. Authors should use titles that identify their documents even when they are used out of context, for example in a user's history or bookmarks, or in search results.",
        "inits": [
            {"type": "text"}
        ]
    },
    "form": {
        "description": "The form element represents a document section that contains interactive controls to submit information to a web server.",
        "inits": [
            {"type": "body"}
        ],
        "attributes": {
            "accept-charset": {
                "description": "Specifies the character encodings that are to be used for the form submission.",
                "type": "String"
            },
            "action": {
                "description": "Specifies the URL of the file that will process the input control when the form is submitted.",
                "type": "String"
            },
            "autocomplete": {
                "description": "Specifies whether the form should have autocomplete enabled.",
                "type": "Unit.Toggle"
            },
            "enctype": {
                "description": "Specifies how the form data should be encoded when submitting it to the server.",
                "type": "Unit.FormEncType"
            },
            "method": {
                "description": "Specifies the HTTP method to use when sending form data.",
                "type": "Unit.FormMethod"
            },
            "name": {
                "description": "Specifies the name of the form.",
                "type": "String"
            },
            "novalidate": {
                "description": "Specifies that the form-data should not be validated on submission.",
                "type": "bool"
            },
            "target": {
                "description": "Specifies where to display the response after submitting the form.",
                "type": "Unit.Target"
            }
        }
    },
    "meta": {
        "description": "The meta element represents various kinds of metadata that cannot be expressed using the title, base, link, style, and script elements.",
        "inits": [
            {"type": "empty"}
        ],
        "attributes": {
            "charset": {
                "description": "Declares the document's character encoding.",
                "type": "String"
            },
            "content": {
                "description": "The value of the element.",
                "type": "String"
            },
            "http-equiv": {
                "description": "Indicates that the content is a pragma directive.",
                "type": "String"
            },
            "name": {
                "description": "The name of the metadata.",
                "type": "String"
            }
        }
    },
    "link": {
        "description": "The link element allows authors to link their document to other resources.",
        "inits": [
            {
                "type": "required",
                "args": {
                    "rel": "String",
                    "href": "String"
                }
            }
        ],
        "attributes": {
            "href": {
                "description": "The URL of the link.",
                "type": "String"
            },
            "crossorigin": {
                "description": "How the element handles cross-origin requests.",
                "type": "Unit.CrossOrigin"
            },
            "hreflang": {
                "description": "Specifies the language of the linked document.",
                "type": "Unit.Language"
            },
            "media": {
                "description": "Specifies what media/device the linked document is optimized for.",
                "type": "String"
            },
            "referrerpolicy": {
                "description": "Specifies which referrer information to send when fetching the linked resource.",
                "type": "Unit.ReferrerPolicy"
            },
            "rel": {
                "description": "Specifies the relationship between the current document and the linked document.",
                "type": "String"
            },
            "sizes": {
                "description": "The sizes attribute gives the sizes of the icons for visual media.",
                "type": "String"
            },
            "type": {
                "description": "Specifies the media type of the linked document.",
                "type": "String"
            }
        }
    }
}